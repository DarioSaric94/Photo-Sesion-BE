// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  password     String
  email        String        @unique
  createdAt    DateTime      @default(dbgenerated("(timezone('utc'::text, now()) AT TIME ZONE '0')::timestamp(0)"))
  roleId       Role          @relation(fields: [role], references: [id])
  role         Int           @default(2)
  token        Token?
  userData     UserData?
  youtubeLinks YoutubeLinks?
  albumSesions AlbumSesion[]
}

model Token {
  id         Int      @id @default(autoincrement())
  token      String?
  resetToken String?
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(dbgenerated("(timezone('utc'::text, now()) AT TIME ZONE '0')::timestamp(0)"))
  userId     Int      @unique
}

model Role {
  id   Int    @id @default(autoincrement())
  type String @unique
  user User[]
}

model UserData {
  id                  Int      @id @default(autoincrement())
  name                String?
  lastName            String?
  image               String?
  city                String?
  country             String?
  domesticNumber      String?
  iternationalCountry String?
  iternationalNumber  String?
  facebookLink        String?
  instagramLink       String?
  userId              Int      @unique
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt           DateTime @default(dbgenerated("(timezone('utc'::text, now()) AT TIME ZONE '0')::timestamp(0)"))
}

model YoutubeLinks {
  id           Int     @id @default(autoincrement())
  youtubeLink1 String?
  youtubeLink2 String?
  youtubeLink3 String?
  user         User?   @relation(fields: [userId], references: [id])
  userId       Int     @unique

  createdAt DateTime @default(dbgenerated("(timezone('utc'::text, now()) AT TIME ZONE '0')::timestamp(0)"))
}

model AlbumSesion {
  id            Int      @id @default(autoincrement())
  participants  String
  albumName     String
  albumPassword String
  images        String[]
  videos        String[]
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
}
